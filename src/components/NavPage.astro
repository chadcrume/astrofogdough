---
import type { INavItem } from "@components/NavItems.ts";
interface Props {
  class?: string | undefined;
  id?: string | undefined;
  page?: INavItem | undefined;
  showTitle?: string | undefined;
}
const { class: addClass, id, page, showTitle }: Props = Astro.props;
---

<section id={(page && page.name) || id} class:list={["nav-section", addClass]}>
  <h1 class:list={["navpage-title", page?.name]}>
    <!-- Two versions: one for when page prop is current page, and one for not -->
    <!-- Both versions have the same element structure: back icon, title, filler -->
    <!-- But icon and title are linked when page prop is not the current page -->
    {
      Astro.url.pathname == page?.route ? (
        <>
          <span>
            {showTitle || page?.title}
            <div
              class:list={[
                "inline-block w-[0.7em] h-[0.7em] rotate-45",
                "opacity-0",
              ]}
            >
              {" "}
            </div>
          </span>
          {/* <div
            class:list={[
              "inline-block w-[0.7em] h-[0.7em] rotate-45",
              "opacity-0",
            ]}
          >
            {" "}
          </div> */}
        </>
      ) : (
        <>
          <a class:list={["navpage-link", page?.name]} href={page?.route}>
            {showTitle || page?.title}
            <div
              class:list={[
                "inline-block w-[0.7em] h-[0.7em] rotate-45",
                "border-l-2 border-b-2",
                "mx-3",
              ]}
            >
              {" "}
            </div>
          </a>
          {/* <div
            class:list={[
              "inline-block w-[0.7em] h-[0.7em] rotate-45",
              "opacity-0",
            ]}
          >
            {" "}
          </div> */}
        </>
      )
    }
  </h1>
  <slot />
</section>
