---
/* 
props ideas:
- size
- align
- bg
- border
- columns
*/
interface Props {
  class?: string | undefined;
  id?: string | undefined;
  type?:
    | "subgrid"
    | "subgrid-left"
    | "subgrid-right"
    | "single-unit"
    | "left"
    | "middle"
    | "middle-left"
    | "right"
    | "med-left"
    | "med-right"
    | "big-left"
    | "big-right"
    | "full"
    | undefined; // Not used but as an example
}
const { class: addClass, id, type }: Props = Astro.props;

const getSectionClass = () => {
  switch (type) {
    case "subgrid":
      return "grid grid-cols-subgrid col-span-full";
    case "subgrid-left":
      return "grid grid-cols-subgrid md:col-span-2 col-start-1";
    case "subgrid-right":
      return "grid grid-cols-subgrid md:col-span-2 md:col-start-2";
    case "single-unit":
      return "";
    case "left":
      return "col-start-1";
    case "middle":
      return "md:col-start-2";
    case "middle-left":
      return "lg:col-start-2";
    case "right":
      return "md:col-start-2 lg:col-start-3";
    case "med-left":
      return "col-start-1 lg:col-span-2";
    case "med-right":
      return "col-start-1 md:col-start-2 lg:col-span-2 lg:col-start-2 ";
    case "big-left":
      return "md:col-span-2 col-start-1";
    case "big-right":
      return "md:col-span-2 lg:col-start-2";
    case "full":
    default:
      return "md:col-span-2 lg:col-span-3 col-start-1";
  }
};
---

<section
  id={id}
  class={[addClass, "page-section", getSectionClass()].join(" ")}
>
  <slot />
</section>
